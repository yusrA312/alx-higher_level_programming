Import function from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> type(bg) == BaseGeometry
    True

    >>> type(BaseGeometry.__dict__['area'])
    <class 'function'>

    >>> bg = BaseGeometry()
    >>> bg.__class__.area()
    Traceback (most recent call last):
              ...
    TypeError: area() missing 1 required positional argument: 'self'

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

    >>> bg = BaseGeometry()
    >>> bg.area(-10)
    Traceback (most recent call last):
              ...
    TypeError: area() takes 1 positional argument but 2 were given

    >>> bg = BaseGeometry()
    >>> bg.area(10.0)
    Traceback (most recent call last):
              ...
    TypeError: area() takes 1 positional argument but 2 were given

    >>> bg = BaseGeometry()
    >>> bg.area(-10.0)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

    >>> bg = BaseGeometry()
    >>> bg.area(3, 3)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

-----------------

    >>> type(BaseGeometry.__dict__['integer_validator'])
    <class 'function'>

    >>> bg.__class__.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("hi", "5")
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", -5)
    Traceback (most recent call last):
    	      ...
    ValueError: hi must be greater than 0

    >>> bg.integer_validator("hi", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: hi must be greater than 0

    >>> bg.integer_validator("hi", -2.5)
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", 3.0)
    Traceback (most recent call last):
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", 5.5)
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", True)
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", [])
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", "A")
    Traceback (most recent call last):
    	      ...
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", None)
    Traceback (most recent call last):
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", {3, 4})
    Traceback (most recent call last):
    TypeError: hi must be an integer

    >>> bg.integer_validator("hi", (12, 3))
    Traceback (most recent call last):
    TypeError: hi must be an integer

    >>> bg.integer_validator(None, 1)

    >>> bg.integer_validator("", 1)

    >>> bg.integer_validator("hi", 1)

    >>> bg.integer_validator(5, 1, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> bg.integer_validator("hi", 1, 2)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("hi")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
